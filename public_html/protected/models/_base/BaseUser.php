<?php

/**
 * This is the model base class for the table "user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "user" available as properties of the model,
 * followed by relations of table "user" available as properties of the model.
 *
 * @property integer $id
 * @property string $username
 * @property string $email
 * @property string $password
 * @property string $salt
 * @property string $fullname
 * @property string $bio
 * @property string $location
 * @property string $url
 *
 * @property Follow[] $followers
 * @property Follow[] $followeds
 * @property Post[] $posts
 */
abstract class BaseUser extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'User|Users', $n);
	}

	public static function representingColumn() {
		return 'username';
	}

	public function rules() {
		return array(
			array('username, email, fullname', 'required'),
            array('password', 'required', 'on'=>'insert'),
            array('email', 'unique', 'allowEmpty' => false, 'attributeName' => 'email', 'className' => 'User'),
            array('username', 'unique', 'allowEmpty' => false, 'attributeName' => 'username', 'className' => 'User'),
			array('bio, location, url', 'safe'),
			array('bio, location, url', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, username, email, password, salt, fullname, bio, location, url', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'followeds' => array(self::HAS_MANY, 'Follow', 'id_followed'),
			'followers' => array(self::HAS_MANY, 'Follow', 'id_follower'),
			'posts' => array(self::HAS_MANY, 'Post', 'id_user'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'username' => Yii::t('app', 'Nome de UsuÃ¡rio'),
			'email' => Yii::t('app', 'Email'),
			'password' => Yii::t('app', 'Senha'),
			'salt' => Yii::t('app', 'Salt'),
			'fullname' => Yii::t('app', 'Nome Completo'),
			'bio' => Yii::t('app', 'Bio'),
			'location' => Yii::t('app', 'Location'),
			'url' => Yii::t('app', 'Url'),
			'follows' => null,
			'follows1' => null,
			'posts' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('username', $this->username, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('salt', $this->salt, true);
		$criteria->compare('fullname', $this->fullname, true);
		$criteria->compare('bio', $this->bio, true);
		$criteria->compare('location', $this->location, true);
		$criteria->compare('url', $this->url, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}